* jsonl.el 
** Introduction

This library contains some utility functions to simplify working with line-delimited JSON (JSONL).  Sometimes called "newline-delimited JSON" or "JSON lines", line-delimited JSON is a format for encoding multiple JSON values within a single file:

#+begin_src json
{"foo": "bar"}
{"baz": "bat"}
#+end_src

These files are not valid JSON, but serve as a more suitable format for streaming or logging structured data.

Read about JSONL:
 - [[http://jsonlines.org/][JSON Lines]]
 - [[https://en.wikipedia.org/wiki/JSON_streaming#Line-delimited_JSON][JSON streaming - Wikipedia]]

** Usage

Use `jsonl-append-value` to log an arbitrary JSON value:

#+begin_src emacs-lisp
(jsonl-append-value "~/logging.jsonl" `((hostname . ,(s-trim (shell-command-to-string "hostname")))
                                        (current_value . 42)
                                        (other_data . ((list . [10 20 30])
                                                       (note . "just a note")))
                                        (timestamp . ,(format-time-string "%Y-%m-%dT%T"))))
#+end_src

`loggin.jsonl` will then have the following value appended to it:

#+begin_src json
{"hostname":"devbox","current_value":42,"other_data":{"list":[10,20,30],"note":"just a note"},"timestamp":"2019-04-07T23:13:15"}
#+end_src

To read all values from a file:

#+begin_src emacs-lisp
(jsonl-read-from-file "~/logging.jsonl")
#+end_src

** Alternatives / Related Projects

 - [[https://github.com/maxogden/ndjson][ndjson]] (javascript) - streaming line delimited json parser + serializer
 - [[https://github.com/timkuijsten/node-ld-jsonstream#readme][node-ld-jsonstream]] (javascript) - Simple and secure line delimited JSON stream parser
